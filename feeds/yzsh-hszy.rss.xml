<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Welcome to YZSH-HSZY blog. - YZSH-HSZY</title><link>https://yzsh-hszy.github.io/</link><description></description><lastBuildDate>Thu, 20 Mar 2025 12:00:00 +0800</lastBuildDate><item><title>Linux SSH Port Forward Example.</title><link>https://yzsh-hszy.github.io/2025-03-20-linux-ssh-port-forward-example.html</link><description>&lt;h1&gt;介绍&lt;/h1&gt;
&lt;p&gt;此文章记录使用ssh进行端口转发的示例。&lt;/p&gt;
&lt;p&gt;ssh能够将其他tcp端口的网络数据通ssh连接来转发, 并且提供自动加密及解密服务, 也叫做tunnel(隧道). 如&lt;code&gt;Telnet&lt;/code&gt;/&lt;code&gt;SMTP&lt;/code&gt;/&lt;code&gt;LDAP&lt;/code&gt;等应用.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh隧道优点:
1. 避免了用户名,密码及隐私 …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Thu, 20 Mar 2025 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2025-03-20:/2025-03-20-linux-ssh-port-forward-example.html</guid><category>Linux</category></item><item><title>Linux Root File System Make.</title><link>https://yzsh-hszy.github.io/2025-03-15-linux-root-file-system-make.html</link><description>&lt;h1&gt;笔记介绍&lt;/h1&gt;
&lt;p&gt;此文件记载我学习定制linux系统中关于 &lt;code&gt;root file system&lt;/code&gt; 的部分&lt;/p&gt;
&lt;h2&gt;参考文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cnblogs.com/wsg1100/p/13127636.html"&gt;博客园-制作ubuntu-base rootfs博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Sat, 15 Mar 2025 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2025-03-15:/2025-03-15-linux-root-file-system-make.html</guid><category>Linux</category></item><item><title>Customize Virtual Device Using Qemu.</title><link>https://yzsh-hszy.github.io/2025-03-10-customize-virtual-device-using-qemu.html</link><description>&lt;h1&gt;笔记介绍&lt;/h1&gt;
&lt;p&gt;该博客用于记录学习在qemu中添加自定义开发板的过程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; qemu 官方在 &lt;code&gt;hw/misc/edu.c&lt;/code&gt; 中提供了一个教学用的设备样例, 可参考此文件实现模拟设 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Mon, 10 Mar 2025 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2025-03-10:/2025-03-10-customize-virtual-device-using-qemu.html</guid><category>Qemu</category></item><item><title>Build Mini Linux Distro And Use Qemu Running.</title><link>https://yzsh-hszy.github.io/2025-02-10-build-mini-linux-distro-and-use-qemu-running.html</link><description>&lt;h1&gt;介绍&lt;/h1&gt;
&lt;p&gt;这是使用qemu的使用教程, 以构建最小linux发行版为例.
&lt;a href="https://github.com/nir9/welcome/tree/master"&gt;参nir9博客&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;术语参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;initrd&lt;/code&gt;: 初始化RAM磁盘, 是在实际根文件系统之前装载的初始根文件系统. initrd绑定到内核时会被内核引导过程加载,然后挂载 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Mon, 10 Feb 2025 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2025-02-10:/2025-02-10-build-mini-linux-distro-and-use-qemu-running.html</guid><category>Qemu</category></item><item><title>multiprocess blog.</title><link>https://yzsh-hszy.github.io/2024-12-30-multiprocess-blog.html</link><description>&lt;h1&gt;笔记介绍&lt;/h1&gt;
&lt;p&gt;该笔记用于记录工作中多进程相关问题和学习笔记.主要为python语言.
&lt;a href="https://docs.python.org/zh-cn/3/library/multiprocessing.html"&gt;参阅官方多进程文档获取详细说明&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;python内部提供一个multiprocessing模块, 其支持使 …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Mon, 30 Dec 2024 19:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2024-12-30:/2024-12-30-multiprocess-blog.html</guid><category>Test</category></item><item><title>Cpython Learen Notes.</title><link>https://yzsh-hszy.github.io/2024-07-18-cpython-learen-notes.html</link><description>&lt;h1&gt;cpython&lt;/h1&gt;
&lt;p&gt;一个python的c语言解释器，同样的python解释器实现还有jython、pypy等&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/python/cpython"&gt;github官网&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;准备&lt;/h2&gt;
&lt;p&gt;在学习python的过程中，我对python的一些工作细节感到困惑，因此有了本文。在这里我将学习cpython源码的一些细节记录在下面:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt; cpython 3.12.3,ubuntu 20.04 in wsl2,gun/gcc系列编译器
&lt;strong&gt;注意&lt;/strong&gt; cpython在编译安装时，需 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Thu, 18 Jul 2024 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2024-07-18:/2024-07-18-cpython-learen-notes.html</guid><category>Cpython</category></item><item><title>Cpython Package Publish Notes.</title><link>https://yzsh-hszy.github.io/2024-07-18-cpython-package-publish-notes.html</link><description>&lt;h2&gt;如何在 pypi(即python package index，python包索引)上发布自己新建的工具包？&lt;/h2&gt;
&lt;h3&gt;setup.cfg vs setup.py vs pyproject.toml区别&lt;/h3&gt;
&lt;p&gt;这三个文件是Python项目的配置文件,他们分别用于不同的目的:
1. setup.cfg: 这 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Thu, 18 Jul 2024 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2024-07-18:/2024-07-18-cpython-package-publish-notes.html</guid><category>Cpython</category></item><item><title>Python Super Class Example Notes.</title><link>https://yzsh-hszy.github.io/2024-07-18-python-super-class-example-notes.html</link><description>&lt;h2&gt;super笔记&lt;/h2&gt;
&lt;p&gt;在oop编程中，我们经常需要使用super来调用父类的方法，各个编程语言均有对应的super实现。在python中提供超类super的类定义，有以下几种调用方式。
1. 在类定义代码段中，使用无参数的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Thu, 18 Jul 2024 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2024-07-18:/2024-07-18-python-super-class-example-notes.html</guid><category>Cpython</category></item><item><title>Python Thread Package Example Notes.</title><link>https://yzsh-hszy.github.io/2024-07-18-python-thread-package-example-notes.html</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;atexit&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_p&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;this is test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;/%m/%Y, %H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="c1"&gt;# atexit.register(test_p)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;thread_print&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;1e3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;.001&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;threading end print&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Thu, 18 Jul 2024 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2024-07-18:/2024-07-18-python-thread-package-example-notes.html</guid><category>Cpython</category></item><item><title>Python Unicode And Utf-8 Different Notes.</title><link>https://yzsh-hszy.github.io/2024-07-18-python-unicode-and-utf-8-different-notes.html</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;all_unicode_char.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;err_nums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;true_nums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;UnicodeEncodeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;err_nums&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;true_nums&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;the true add error nums equals range(1, pow(2,19 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Thu, 18 Jul 2024 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2024-07-18:/2024-07-18-python-unicode-and-utf-8-different-notes.html</guid><category>Cpython</category></item><item><title>Mindspore Learen Notes -- Data Transfroms Operation Learen.</title><link>https://yzsh-hszy.github.io/2024-07-04-mindspore-learen-notes-data-transfroms-operation-learen.html</link><description>&lt;h1&gt;数据变换 Transforms&lt;/h1&gt;
&lt;p&gt;通常情况下，直接加载的原始数据并不能直接送入神经网络进行训练，我们需要对其进行数据预处理。MindSpore提供不同种类的数据变换（Transforms），配 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Thu, 04 Jul 2024 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2024-07-04:/2024-07-04-mindspore-learen-notes-data-transfroms-operation-learen.html</guid><category>Mindspore</category></item><item><title>Mindspore Learen Notes -- Construct Dataset.</title><link>https://yzsh-hszy.github.io/2024-07-03-mindspore-learen-notes-construct-dataset.html</link><description>&lt;h2&gt;数据集 Dataset&lt;/h2&gt;
&lt;p&gt;数据是深度学习的基础，高质量的数据输入将在整个深度神经网络中起到积极作用。MindSpore提供基于Pipeline的数据引擎，通过数据集（Dataset）和数据变 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Wed, 03 Jul 2024 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2024-07-03:/2024-07-03-mindspore-learen-notes-construct-dataset.html</guid><category>Mindspore</category></item><item><title>Mindspore Learen Notes -- Tensor Understand.</title><link>https://yzsh-hszy.github.io/2024-07-02-mindspore-learen-notes-tensor-understand.html</link><description>&lt;h2&gt;张量介绍&lt;/h2&gt;
&lt;p&gt;张量（Tensor）是一个可用来表示在一些矢量、标量和其他张量之间的线性关系的多线性函数，这些线性关系的基本例 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Tue, 02 Jul 2024 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2024-07-02:/2024-07-02-mindspore-learen-notes-tensor-understand.html</guid><category>Mindspore</category></item><item><title>MindSpore Learen Notes -- QuikStart.</title><link>https://yzsh-hszy.github.io/2024-07-01-mindspore-learen-notes-quikstart.html</link><description>&lt;h1&gt;mindspore介绍&lt;/h1&gt;
&lt;p&gt;昇思MindSpore是一个全场景深度学习框架，旨在实现易开发、高效执行、全场景统一部署三大目标。
昇思提供一系列配套设施能够为简化深度学习过程，并提 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">YZSH-HSZY</dc:creator><pubDate>Mon, 01 Jul 2024 12:00:00 +0800</pubDate><guid isPermaLink="false">tag:yzsh-hszy.github.io,2024-07-01:/2024-07-01-mindspore-learen-notes-quikstart.html</guid><category>MindSpore</category></item></channel></rss>